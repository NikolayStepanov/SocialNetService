version: "3.9"
services:
  app1:
    container_name: app1
    restart: always
    build: ./
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres?sslmode=disable"
      DB_PASSWORD: "postgres"
  app2:
    container_name: app2
    restart: always
    build: ./
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres?sslmode=disable"
      DB_PASSWORD: "postgres"
  app3:
    container_name: app3
    restart: always
    build: ./
    command: ./bin/webserver
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres?sslmode=disable"
      DB_PASSWORD: "postgres"
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "8080:8080"
    depends_on:
      - app1
      - app2
      - app3
  db:
    container_name: db
    restart: always
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

volumes:
  db-data: